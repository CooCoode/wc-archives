name: Batch Update WeChat Articles

on:
  schedule:
    - cron: '*/5 * * * *'  # Run every 5 minutes (UTC time)
  workflow_dispatch:  # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: write      # Required for checkout and pushing changes
  pages: write        # Required for deploying to Pages
  id-token: write     # Required for deployment authentication
  actions: write      # Required for triggering other workflows
  deployments: write  # Required for deployments
  checks: write       # Required for creating checks

# Ensure only one workflow runs at a time
concurrency:
  group: batch-update
  cancel-in-progress: false

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.check_changes.outputs.changes_detected }}
    timeout-minutes: 9  # Set timeout to 9 minutes (GitHub Actions max is 360 minutes)
    env:
      TRIGGER_TIME: ${{ github.event.schedule }}
      EVENT_NAME: ${{ github.event_name }}
      REF_NAME: ${{ github.ref_name }}
      REPOSITORY: ${{ github.repository }}
    steps:
      - name: Check GitHub Status
        run: |
          curl -s https://www.githubstatus.com/api/v2/status.json | jq '.status.description'

      - name: Install and authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Debug workflow trigger
        run: |
          echo "=== Workflow Debug Information ==="
          echo "Trigger time: $TRIGGER_TIME"
          echo "Event name: $EVENT_NAME"
          echo "Branch: $REF_NAME"
          echo "Repository: $REPOSITORY"
          echo "Current time: $(date)"
          echo "GitHub workspace: $GITHUB_WORKSPACE"
          echo "GitHub actor: $GITHUB_ACTOR"
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub SHA: $GITHUB_SHA"
          
          echo "\n=== Repository Permissions ==="
          gh api /repos/$REPOSITORY/actions/permissions --jq '.enabled'
          
          echo "\n=== Workflow Status ==="
          gh run list --limit 5 --workflow batch-update.yml

      - name: Process batch of articles
        env:
          WECHAT_BIZ_ID: ${{ secrets.WECHAT_BIZ_ID }}
          WECHAT_TOKEN: ${{ secrets.WECHAT_TOKEN }}
          WECHAT_COOKIE: ${{ secrets.WECHAT_COOKIE }}
        run: node src/batch-process.js

      - name: Check for changes in public directory
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain public/)" ]]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add public/
            git commit -m "Update public content from batch process"
            git push
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Call deploy workflow
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-pages.yml',
              ref: 'main'
            })
